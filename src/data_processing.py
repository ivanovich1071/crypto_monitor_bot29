import logging
from src.database import get_dropped_coins, add_dropped_coin, remove_dropped_coin
from src.telegram_bot import send_telegram_message  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
from src.config import POLONIEX_API_URL

logger = logging.getLogger(__name__)


async def find_significant_drops(ticker_data, user_thresholds, chat_id):
    """
    –ù–∞–π—Ç–∏ –º–æ–Ω–µ—Ç—ã —Å –ø–∞–¥–µ–Ω–∏–µ–º –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ –∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –∏—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ, —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

    :param ticker_data: –î–∞–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ä–∞ Poloniex
    :param user_thresholds: –°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, [50, 30, 10])
    :param chat_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –¥–≤–∞ —Å–ª–æ–≤–∞—Ä—è: new_drops –∏ recovered_coins
    """
    new_drops = {}  # {threshold: [coin1, coin2, ...]}
    recovered_coins = []  # [coin1, coin2, ...]

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–µ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —É–ø–∞–≤—à–∏—Ö –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    dropped_coins = get_dropped_coins(chat_id)
    dropped_coins_dict = {coin.coin: coin.threshold for coin in dropped_coins}

    for coin, data in ticker_data.items():
        try:
            percent_change = float(data.get("percentChange", "0"))
            volume = data.get("baseVolume", "0")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∞–¥–µ–Ω–∏–µ
            for threshold in user_thresholds:
                if percent_change <= -threshold:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ –ø–∞–¥–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –º–æ–Ω–µ—Ç—ã –Ω–∞ –¥–∞–Ω–Ω–æ–º –ø–æ—Ä–æ–≥–µ
                    if coin not in dropped_coins_dict or dropped_coins_dict[coin] < threshold:
                        # –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–µ—Ç—É –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø–∞–¥–µ–Ω–∏—è
                        add_dropped_coin(chat_id, coin, threshold)
                        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–æ–≤—ã–µ –ø–∞–¥–µ–Ω–∏—è
                        new_drops.setdefault(threshold, []).append({
                            "name": coin,
                            "volume": volume
                        })
                        logger.info(f"–ú–æ–Ω–µ—Ç–∞ {coin} —É–ø–∞–ª–∞ –Ω–∞ {threshold}%, –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ.")

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–∞–¥–µ–Ω–∏–∏
                    message = f"üìâ –ú–æ–Ω–µ—Ç–∞ {coin} —É–ø–∞–ª–∞ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ {threshold}%.\n–û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤: {volume}"
                    await send_telegram_message(chat_id, message)
                    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–∞–¥–µ–Ω–∏–∏ {coin} –Ω–∞ {threshold}% –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}.")

                    break  # –ï—Å–ª–∏ –º–æ–Ω–µ—Ç–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–≥–æ –ø–æ—Ä–æ–≥–∞, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –º–µ–Ω—å—à–∏—Ö

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
            if percent_change >= 0:
                if coin in dropped_coins_dict:
                    # –ú–æ–Ω–µ—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å
                    remove_dropped_coin(chat_id, coin)
                    recovered_coins.append(coin)
                    logger.info(f"–ú–æ–Ω–µ—Ç–∞ {coin} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –¥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.")
        except ValueError:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–Ω–µ—Ç—ã {coin}.")
            continue

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    return new_drops, recovered_coins
