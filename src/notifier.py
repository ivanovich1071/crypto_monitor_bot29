import logging
from src.database import get_all_users
from src.poloniex_api import get_ticker_data
from src.data_processing import find_significant_drops
from src.telegram_bot import send_telegram_message

logger = logging.getLogger(__name__)

async def job():
    """
    –ó–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–∫–µ—Ä–æ–≤ –∫–∞–∂–¥—ã–π —á–∞—Å.
    """
    logger.info("–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–Ω–µ—Ç.")
    ticker_data = await get_ticker_data()
    if not ticker_data:
        logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return

    users = get_all_users()
    for user in users:
        chat_id = user['chat_id']
        thresholds = user['thresholds']
        if not thresholds:
            continue

        new_drops, recovered_coins = await find_significant_drops(ticker_data, thresholds, chat_id)

        if new_drops:
            message = "üìâ –ù–∞–π–¥–µ–Ω—ã –º–æ–Ω–µ—Ç—ã —Å —Ä–µ–∑–∫–∏–º –ø–∞–¥–µ–Ω–∏–µ–º:\n"
            for threshold, coins in new_drops.items():
                message += f"\nüîπ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ {threshold}%:\n"
                for coin in coins:
                    message += f"‚Ä¢ {coin['name']} - –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤: {coin['volume']}\n"
            await send_telegram_message(chat_id, message)

        if recovered_coins:
            message = "üìà –ú–æ–Ω–µ—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –¥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –∏–ª–∏ –≤—ã—à–µ:\n"
            for coin in recovered_coins:
                message += f"‚Ä¢ {coin}\n"
            await send_telegram_message(chat_id, message)
